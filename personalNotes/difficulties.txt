Having locks for each variable one common one
Having recursive works work with pthread_cond_wait()
should i go for unordered map or stick to lists for ease of use
for what scope should i change handler of SIGUSR1 to do nothing of importance
how should i check if a thread is sleeping wo forcing studenets to create public values

which signals to block and which to not
when should you unblock them
could you ignore all signals (except SIGUSR1) before sleeping and later on switch them back to default
this assumes that if one signal is delivered than all must be

deciding to use sigusr2 as well for testing???

Had to switch to more portable sigaction since its the recommended approach
Intellisense gives wrong suggestion that does not compile - be careful???/

Just assumed that pthread_signal wakes up one thread - the first in the list for O(1) complexity
Signal dispositions are process wide
using sigwait instead of pause to more directly get the signal number instead of using handlers
how do i ensure that singal that is sent through signal/broadcast functions does not get missed

If multiple threads of a process are blocked waiting for the same
       signal(s) in sigwaitinfo() or sigtimedwait(), then exactly one of
       the threads will actually receive the signal if it becomes
       pending for the process as a whole; which of the threads receives
       the signal is indeterminate


* Seems to be the case that sigwaitinfo gets interrupted by other singals as well
* Seems to be the case that pthread_cond_wait gets interrupted by other signals as well
* but i want to test that a thread has actually gone to sleep until SIGUSR1 received

* that does not seem possible however
* instead have a handler for all signals that just sets a global variable to the signal received
* and keep sigwait until the global variable changes to SIGUSR1
* but this disregards other important singals that should generally not be ignored

****sigwaitinfo does not execute the signal handler****

/////////////////////////
    SHORT QUESTIONS
/////////////////////////

* difference between signal and broadcast
* How to use <.h> for include instead of specifying full relative path using ""
* Explain the makefile
* the helpers - should i make them part of the class or not